name: Android CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle Wrapper
      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
            .gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}

      # Cache Gradle Dependencies
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            .gradle/caches
          key: ${{ runner.os }}-gradle-deps-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-deps-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Code Quality Checks
      - name: Run ktlint (code style)
        run: ./gradlew ktlintCheck || echo "ktlint not configured"

      - name: Run Android Lint
        run: ./gradlew lintDebug || echo "lint not available"

      - name: Run Detekt (static analysis)
        run: ./gradlew detekt || echo "detekt not configured"

      # Build Debug APK
      - name: Build Debug APK
        run: ./gradlew assembleDebug --parallel --daemon --build-cache

      - name: Run Unit Tests
        run: ./gradlew test --parallel

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Cache Gradle Wrapper
      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/wrapper
            .gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}

      # Cache Gradle Dependencies
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            .gradle/caches
          key: ${{ runner.os }}-gradle-deps-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-deps-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build Release APK
      - name: Build Release APK
        run: ./gradlew assembleRelease --parallel --daemon --build-cache

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

      # Cache Gradle Wrapper
      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}

      # Cache Gradle Dependencies
      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-deps-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-deps-

      # Decode Keystore
      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          if [ -n "$ENCODED_KEYSTORE" ]; then
            echo $ENCODED_KEYSTORE | base64 --decode > app/release.keystore
          fi

      # Build Release APK (with signing)
      - name: Build Release APK
        env:
          KEYSTORE_FILE: release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      # Generate Release Notes
      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "### What's New" >> release_notes.md
          echo "* Build number: ${{ github.run_number }}" >> release_notes.md
          echo "* Commit: ${{ github.sha }}" >> release_notes.md
          echo "* Build date: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> release_notes.md

      # Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/app-release.apk
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body_path: release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload Release Artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/mapping/release/mapping.txt
          retention-days: 30
